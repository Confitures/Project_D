1.	Создать два объекта модели Author, связанные с пользователями.
user1 = User.objects.create(username='пользователь1')
user2 = User.objects.create(username='пользователь2')

Author.objects.create(authorUser = user1)
Author.objects.create(authorUser = user2)


 
2.	Добавить 4 категории в модель Category. 
Category.objects.create(category = 'категория 1')
Category.objects.create(category = 'категория 2')
Category.objects.create(category = 'категория 3')
Category.objects.create(category = 'категория 4')

3.	Добавить 2 статьи и 1 новость. 
Post.objects.create(author = Author.objects.get(id = 1), title = 'Пост 1', text = ' пост 1, текст', item = 'news')
Post.objects.create(author = Author.objects.get(id = 2), title = 'Пост 2', text = ' пост 2, текст', item = 'article')
Post.objects.create(author = Author.objects.get(id = 2), title = 'Пост 3', text = ' пост 3, текст', item = 'article')

4.	Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий). 
Post.objects.get(id=1).category = Category.objects.get(id = 1), Category.objects.get(id=2)

Post.objects.get(id=1).category.add(Category.objects.get(id = 2))
Post.objects.get(id=1).category.add(Category.objects.get(id = 1))
Post.objects.get(id=2).category.add(Category.objects.get(id = 3))
Post.objects.get(id=3).category.add(Category.objects.get(id = 4))


5.	Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий). 
Comment.objects.create(comment = 'комментарий 1', post = Post.objects.get(id = 1), user = User.objects.get(id=2))
Comment.objects.create(comment = 'комментарий 2', post = Post.objects.get(id = 2), user = User.objects.get(id=2))
Comment.objects.create(comment = 'комментарий 3', post = Post.objects.get(id = 3), user = User.objects.get(id=1))
Comment.objects.create(comment = 'комментарий 4', post = Post.objects.get(id = 3), user = User.objects.get(id=1))


6.	Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов. 
Post.objects.get(id = 1).like()
Post.objects.get(id = 2).like()
Post.objects.get(id = 2).like()
Post.objects.get(id = 2).like()
Post.objects.get(id = 3).like()
Post.objects.get(id = 3).like()
Comment.objects.get(id = 1).like()
Comment.objects.get(id = 1).like()
Comment.objects.get(id = 2).dislike()
Comment.objects.get(id = 2).deslike()


7.	Обновить рейтинги пользователей. 

Author.objects.get(id=1).update_rating()
Author.objects.get(id=2).update_rating()

8.	Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта). 

lid = Author.objects.order_by('-rating')[0]
lid.authorUser.username
lid.rating

9.	Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье. 

lid = Post.objects.order_by('-rating')[0]
lid.author.authorUser.username
lid.rating
lid.title
lid.preview()

10.	Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

>>> for i in c:
...     i.time_created
...     i.user
...     i.rating
...     i.comment
